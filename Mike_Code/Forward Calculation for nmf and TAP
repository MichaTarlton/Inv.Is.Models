Forward Calculation for nmf and TAP

"You can analytically solve for m and C (it is a good exercise) and you can also find the solution in many papers (including my PRE paper in 2011 (2009) with John Hertz) and then check your simulations results agains the analytical expression."

%% nMF
How, since they all are dependent on themselves?
like mi is dependent on mj, and C is dependent on mi

hmmmmm maybe do like mi = tan(h), but this only works with the disconnected matrix, dimer idk




From eq10 roudi/hertz 2013 


-(nmfC).^-1 = Jij % so no just invert this for the C. Also note this is for decoupled

Yeah just confused about how to solve with the dimer case, I think I may need to do a gradient descent or something to figure it out


Indie pair approx

Jpair Element Template: (1 + mi' + mi + chi)

Jpair = ln(((1 + mi' + mi + chi)(1 - mi' - mi + chi))./((1 - mi' + mi - chi)(1 + mi' - mi - chi)))./4


JLR = ln(1 + Cij./((1+mi).^2)))./4

--------------------------------------------------------
%% Script for generating mi, this is actually a loop
% gotta figure out the trial ceiling
% also something about changing m calculation to ensure they approach correct values, sometimes the leap to high in estimate value

mtap = rand(1,N)
for i = 1:(Need to make a convincing thing)

 mtapnew = tanh(h' + J*mtap - mtap'.*(J.^2)*(1-mtap.^2))
 mtap = mtapnew

end

Fuuuuck something wrong with this, keeps converging to the exact same fucking thing
oh wait, well I think that works, certainly converges to *Something*

mtap = rand(1,N)'
for i = 1:N*1e3
 mtapnew = tanh(h' + J*mtap - mtap'.*(J.^2)*(1-mtap.^2));
 mtap = mtapnew;
end
 disp(mtap')
----------------------------------------------------------------


%% Plot
% Probably could break this out into a side thing
figure
scatter([Sstruct.mfinal],[sanitydiscon.th])
axis([-1 1 -1 1])
hold on 
refline(1,0) 
title({'Magnetizations: mi',['N = ',num2str(N)],['T = ',num2str(log10(T))]})
xlabel('Disconnected')
ylabel('Dimer')

figure
scatter(sort([sanity.tchk]),sort([sanitydimer.tchk]))
hold on 
title({'Magnetization Check: th(h) - mi',['N = ',num2str(N)],['T = ',num2str(log10(T))]})
xlabel('Disconnected')
ylabel('Dimer')


figure
scatter(sort(mean([sanity.chi])),sort(mean([sanitydimer.chi])))
hold on 
title({'Correlation Check: chi = sisj - mimj',['N = ',num2str(N)],['T = ',num2str(log10(T))]})
xlabel('Disconnected')
ylabel('Dimer')


figure
scatter(JHdimer.Jsparse,sanitydiscon.mfJ,[],'b')
hold on 
scatter(JHdimer.Jsparse,sanitydiscon.mfJ,[],'r')
title({'Disconnected Jtap v real',['N = ',num2str(N)],['T = ',num2str(log10(T))]})
xlabel('J real')
ylabel('J Tap: red, J mf: Blue')

figure
scatter(JHdimer.Jsparse,sanitydiscon.mfJ,[],'b')
hold on 
scatter(JHdimer.Jsparse,sanitydiscon.mfJ,[],'r')
title({'Disconnected Jtap v real',['N = ',num2str(N)],['T = ',num2str(log10(T))]})
xlabel('J real')
ylabel('J Tap: red, J mf: Blue')


%% stuffffff
mx = [SstructDiscon.mfinal];
my = [sanitydisc.th];
mtchk=mean([sanitydisc.mtchk]);

figure
scatter(mx(:),my(:))
axis([-1 1 -1 1])
hold on 
%refline(1,0) 
title({'Disconnected J Magnetizations: mi',['N = ',num2str(N)],['T = ',num2str(log10(T))],['Avg. difference between M values = ',num2str(mtchk)],['No. Samples = ',num2str(length(mx))]})
xlabel('Generated from Monte Carlo')
ylabel('Calcualted from mi = tanh(h)')



Cx = [sanitydimer.Cij]
Cy = [sanitydimer.Cpair]

figure
scatter(Cx(:),Cy(:))
%axis([-1 1 -1 1])
refline(1,0)
hold on 
%refline(1,0) 
title({'Correlations for Dimers',['N = ',num2str(N)],['T = ',num2str(log10(T))],['Avg. difference between M values = ',num2str(mean(abs(Cx(:)-Cy(:)),'all'))],['No. Samples = ',num2str(length(Cx(:)))]})
xlabel('Generated Correlations')
ylabel('Correlation for Indie Pair and given J')


